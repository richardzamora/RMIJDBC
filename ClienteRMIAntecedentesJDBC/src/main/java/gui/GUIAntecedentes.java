/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.rmi.RemoteException;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logica.estuctural.Antecedente;
import logica.estuctural.Ciudadano;
import logica.estuctural.Ciudadano.TipoDocumento;
import logica.Observer;
import model.IServicioAntecedentes;

/**
 *
 * @author Estudiantes
 */
public class GUIAntecedentes extends javax.swing.JFrame implements Cambiable{

    private IServicioAntecedentes controller;
    private Observer observer;
    /**
     * Creates new form GUIAntecedentes
     */
    public GUIAntecedentes(IServicioAntecedentes controller) {
        initComponents();
        this.controller = controller;
        observer = Observer.getInstance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setTitle("Ver Antecedentes");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Lucida Fax", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(3, 59, 118));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ANTECEDENTES");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(TipoDocumento.values()));
        jComboBox1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(220, 220, 220)));

        jLabel5.setText("Tipo de documento");
        jLabel5.setToolTipText("");

        jLabel6.setText("Numero de identificación ");
        jLabel6.setToolTipText("");

        jTextField5.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(220, 220, 220)));

        jButton1.setBackground(new java.awt.Color(229, 229, 229));
        jButton1.setFont(new java.awt.Font("Lucida Fax", 2, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(3, 59, 118));
        jButton1.setText("Mostrar");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon("imagenes\\antecedentes.png"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(172, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jLabel2.getAccessibleContext().setAccessibleName("label2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
        try {
            String cedula = jTextField5.getText().trim();
            TipoDocumento tipoDocumento = (TipoDocumento) jComboBox1.getSelectedItem();
            Ciudadano ciudadano = controller.darCiudadanoPorCedula(cedula, tipoDocumento);
            observer.setUltimoCiudadano(ciudadano);
            observer.cambioEstado();
            Antecedente antecedente = controller.darPrimerAntecedente(cedula, tipoDocumento);
            LocalDateTime actual = LocalDateTime.now();
            String fechaHora = actual.getHour()+ " horas del dia " + actual.getDayOfMonth() + " de " + actual.getMonth() + " del " + actual.getYear();
            if(!cedula.isEmpty()) {
                if(ciudadano != null) {
                    if (ciudadano.getAntecedentes().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "                                                                Consulta en línea de Antecedentes Penales y Requerimientos Judiciales\n" +
                                "\n" +
                                "\n" +
                                "                                                                                            La Policía Nacional de Colombia informa:\n" +
                                "\n" +
                                "                                                          Que siendo las " + fechaHora + " , el ciudadano identificado con:\n" +
                                "                                                                                               Cédula de Ciudadanía N° " + jTextField5.getText() + "\n" +
                                "                                                                              Apellidos y Nombres: " + observer.getUltimoCiudadano().getApellido() + " " + observer.getUltimoCiudadano().getNombre() + "\n" +
                                "\n" +
                                "\n" +
                                "           NO TIENE ASUNTOS PENDIENTES CON LAS AUTORIDADES JUDICIALES\n" +
                                "           de conformidad con lo establecido en el art�culo 248 de la Constitución Política de Colombia.\n" +
                                "\n" +
                                "           En cumplimiento de la Sentencia SU-458 del 21 de junio de 2012, proferida por la Honorable Corte Constitucional, la leyenda" + "\n" +
                                "           NO TIENE ASUNTOS PENDIENTES CON LAS AUTORIDADES JUDICIALES� aplica para todas aquellas personas que no registran antecedentes" + "\n" +
                                "           y para quienes la autoridad judicial competente haya decretado la extinción de la condena o la prescripción de la pena.\n" +
                                "\n" +
                                "           Esta consulta es válida siempre y cuando el número de identificación y nombres, correspondan con el documento de identidad registrado" + "\n" +
                                "           y solo aplica para el territorio colombiano de acuerdo a lo establecido en el ordenamiento constitucional.\n" +
                                "\n" +
                                "           Si tiene alguna duda con el resultado, consulte las preguntas frecuentes o acérquese a las instalaciones de la Policía Nacional más cercanas.");
                    } else {
                        JOptionPane.showMessageDialog(this, "                                                                Consulta en línea de Antecedentes Penales y Requerimientos Judiciales\n" +
                                "\n" +
                                "\n" +
                                "                                                                                            La Policía Nacional de Colombia informa:\n" +
                                "\n" +
                                "                                                          Que siendo las " + fechaHora + " , el ciudadano identificado con:\n" +
                                "                                                                                               Cédula de Ciudadanía N° " + jTextField5.getText() + "\n" +
                                "                                                                              Apellidos y Nombres: " + observer.getUltimoCiudadano().getApellido() + " " + observer.getUltimoCiudadano().getNombre() + "\n" +
                                "\n" +
                                "\n" +
                                "           PRESENTA LOS SIGUIENTES PENDIENTES CON LAS AUTORIDADES JUDICIALES\n" +
                                "           de conformidad con lo establecido en el artículo 248 de la Constitución Política de Colombia.\n" +
                                "\n" +
                                "           En cumplimiento de la Sentencia SU-458 del 21 de junio de 2012, proferida por la Honorable Corte Constitucional, la leyenda" + "\n" +
                                "          SE ENCUENTRA QUE APLICA EL SIGUIENTE ANTECEDENTE JUDICIAl� DADO POR UN TIPO DE CRIMEN DE " + antecedente.getTipoDeCrimen() + "\n" +
                                "           EJECUTADO DE MANERA " + antecedente.getDetalles() + "\n" +
                                "           Aplica para todos aquellos que presenten antecedentes\n" +
                                "           y para quienes la autoridad judicial competente haya decretado la extinci�n de la condena o la prescripci�n de la pena.\n" +
                                "\n" +
                                "           Esta consulta es válida siempre y cuando el número de identificación y nombres, correspondan con el documento de identidad registrado" + "\n" +
                                "           y solo aplica para el territorio colombiano de acuerdo a lo establecido en el ordenamiento constitucional.\n" +
                                "\n" +
                                "           Si tiene alguna duda con el resultado, consulte las preguntas frecuentes o acérquese a las instalaciones de la Policía Nacional más cercanas.");
                    }
                }else{
                    JOptionPane.showMessageDialog(this,"El ciudadano con " + cedula + " \n" + " con el tipo de documento " + tipoDocumento + " \n" + " no existe, por favor intentelo de nuevo");
                }
            }else{
                JOptionPane.showMessageDialog(this,"Por favor digite el número de identificación!");
            }
        } catch (RemoteException ex) {
            System.out.println(ex.getMessage());
        }
     
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIAntecedentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIAntecedentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIAntecedentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIAntecedentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GUIAntecedentes().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<TipoDocumento> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

    //TODO implementar
    @Override
    public void cambio() {
        if(observer.getUltimoCiudadano()!= null)
        {
            jTextField5.setText(observer.getUltimoCiudadano().getCedula());
            jComboBox1.setSelectedItem(observer.getUltimoCiudadano().getTipoDocumento());
        }
    }
}
